{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport invariant from 'fbjs/lib/invariant';\nimport normalizeColor from 'normalize-css-color';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar linear = function linear(t) {\n  return t;\n};\nfunction createInterpolation(config) {\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\n    return createInterpolationFromStringOutputRange(config);\n  }\n  var outputRange = config.outputRange;\n  checkInfiniteRange('outputRange', outputRange);\n  var inputRange = config.inputRange;\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n  var easing = config.easing || linear;\n  var extrapolateLeft = 'extend';\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n  var extrapolateRight = 'extend';\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n  return function (input) {\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n    var range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n  };\n}\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n  result = easing(result);\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n  return result;\n}\nfunction colorToRgba(input) {\n  var normalizedColor = normalizeColor(input);\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\n    return input;\n  }\n  normalizedColor = normalizedColor || 0;\n  var r = (normalizedColor & 0xff000000) >>> 24;\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\n  var a = (normalizedColor & 0x000000ff) / 255;\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n}\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = isRgbOrRgba(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = +interpolations[i++](input);\n      if (shouldRound) {\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\n      }\n      return String(val);\n    });\n  };\n}\nfunction isRgbOrRgba(range) {\n  return typeof range === 'string' && range.startsWith('rgb');\n}\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\nfunction findRange(input, inputRange) {\n  var i;\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically non-decreasing ' + arr);\n  }\n}\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\nvar AnimatedInterpolation = function (_AnimatedWithChildren) {\n  function AnimatedInterpolation(parent, config) {\n    var _this;\n    _classCallCheck(this, AnimatedInterpolation);\n    _this = _callSuper(this, AnimatedInterpolation);\n    _this._parent = parent;\n    _this._config = config;\n    _this._interpolation = createInterpolation(config);\n    return _this;\n  }\n  _inherits(AnimatedInterpolation, _AnimatedWithChildren);\n  return _createClass(AnimatedInterpolation, [{\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      this._parent.__makeNative();\n      _superPropGet(AnimatedInterpolation, \"__makeNative\", this, 3)([]);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      var parentValue = this._parent.__getValue();\n      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\n      return this._interpolation(parentValue);\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(config) {\n      return new AnimatedInterpolation(this, config);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this._parent.__addChild(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this._parent.__removeChild(this);\n      _superPropGet(AnimatedInterpolation, \"__detach\", this, 3)([]);\n    }\n  }, {\n    key: \"__transformDataType\",\n    value: function __transformDataType(range) {\n      return range.map(NativeAnimatedHelper.transformDataType);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      if (__DEV__) {\n        NativeAnimatedHelper.validateInterpolation(this._config);\n      }\n      return {\n        inputRange: this._config.inputRange,\n        outputRange: this.__transformDataType(this._config.outputRange),\n        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\n        type: 'interpolation'\n      };\n    }\n  }]);\n}(AnimatedWithChildren);\nAnimatedInterpolation.__createInterpolation = createInterpolation;\nexport default AnimatedInterpolation;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_get","_inherits","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_objectSpread","AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","invariant","normalizeColor","__DEV__","process","env","NODE_ENV","linear","createInterpolation","config","outputRange","createInterpolationFromStringOutputRange","checkInfiniteRange","inputRange","checkValidInputRange","length","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","normalizedColor","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","forEach","value","number","i","push","interpolations","shouldRound","isRgbOrRgba","replace","val","Math","round","String","startsWith","arr","pattern","name","AnimatedInterpolation","_AnimatedWithChildren","parent","_this","_parent","_config","_interpolation","key","__makeNative","__getValue","parentValue","__attach","__addChild","__detach","__removeChild","__transformDataType","transformDataType","__getNativeConfig","validateInterpolation","type","__createInterpolation"],"sources":["C:/Users/Digitacion Nery/Desktop/TornilloFeliz/APP_MOBILE_DESARROLLO/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedInterpolation.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n\r\n/* eslint no-bitwise: 0 */\r\n'use strict';\r\n\r\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\r\nimport AnimatedNode from './AnimatedNode';\r\nimport AnimatedWithChildren from './AnimatedWithChildren';\r\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport normalizeColor from 'normalize-css-color';\r\n\r\nvar __DEV__ = process.env.NODE_ENV !== 'production';\r\n\r\nvar linear = t => t;\r\n/**\r\n * Very handy helper to map input ranges to output ranges with an easing\r\n * function and custom behavior outside of the ranges.\r\n */\r\n\r\n\r\nfunction createInterpolation(config) {\r\n  if (config.outputRange && typeof config.outputRange[0] === 'string') {\r\n    return createInterpolationFromStringOutputRange(config);\r\n  }\r\n\r\n  var outputRange = config.outputRange;\r\n  checkInfiniteRange('outputRange', outputRange);\r\n  var inputRange = config.inputRange;\r\n  checkInfiniteRange('inputRange', inputRange);\r\n  checkValidInputRange(inputRange);\r\n  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\r\n  var easing = config.easing || linear;\r\n  var extrapolateLeft = 'extend';\r\n\r\n  if (config.extrapolateLeft !== undefined) {\r\n    extrapolateLeft = config.extrapolateLeft;\r\n  } else if (config.extrapolate !== undefined) {\r\n    extrapolateLeft = config.extrapolate;\r\n  }\r\n\r\n  var extrapolateRight = 'extend';\r\n\r\n  if (config.extrapolateRight !== undefined) {\r\n    extrapolateRight = config.extrapolateRight;\r\n  } else if (config.extrapolate !== undefined) {\r\n    extrapolateRight = config.extrapolate;\r\n  }\r\n\r\n  return input => {\r\n    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\r\n    var range = findRange(input, inputRange);\r\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\r\n  };\r\n}\r\n\r\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\r\n  var result = input; // Extrapolate\r\n\r\n  if (result < inputMin) {\r\n    if (extrapolateLeft === 'identity') {\r\n      return result;\r\n    } else if (extrapolateLeft === 'clamp') {\r\n      result = inputMin;\r\n    } else if (extrapolateLeft === 'extend') {// noop\r\n    }\r\n  }\r\n\r\n  if (result > inputMax) {\r\n    if (extrapolateRight === 'identity') {\r\n      return result;\r\n    } else if (extrapolateRight === 'clamp') {\r\n      result = inputMax;\r\n    } else if (extrapolateRight === 'extend') {// noop\r\n    }\r\n  }\r\n\r\n  if (outputMin === outputMax) {\r\n    return outputMin;\r\n  }\r\n\r\n  if (inputMin === inputMax) {\r\n    if (input <= inputMin) {\r\n      return outputMin;\r\n    }\r\n\r\n    return outputMax;\r\n  } // Input Range\r\n\r\n\r\n  if (inputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (inputMax === Infinity) {\r\n    result = result - inputMin;\r\n  } else {\r\n    result = (result - inputMin) / (inputMax - inputMin);\r\n  } // Easing\r\n\r\n\r\n  result = easing(result); // Output Range\r\n\r\n  if (outputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (outputMax === Infinity) {\r\n    result = result + outputMin;\r\n  } else {\r\n    result = result * (outputMax - outputMin) + outputMin;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction colorToRgba(input) {\r\n  var normalizedColor = normalizeColor(input);\r\n\r\n  if (normalizedColor === null || typeof normalizedColor !== 'number') {\r\n    return input;\r\n  }\r\n\r\n  normalizedColor = normalizedColor || 0;\r\n  var r = (normalizedColor & 0xff000000) >>> 24;\r\n  var g = (normalizedColor & 0x00ff0000) >>> 16;\r\n  var b = (normalizedColor & 0x0000ff00) >>> 8;\r\n  var a = (normalizedColor & 0x000000ff) / 255;\r\n  return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\r\n}\r\n\r\nvar stringShapeRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\r\n/**\r\n * Supports string shapes by extracting numbers so new values can be computed,\r\n * and recombines those values into new strings of the same shape.  Supports\r\n * things like:\r\n *\r\n *   rgba(123, 42, 99, 0.36) // colors\r\n *   -45deg                  // values with units\r\n */\r\n\r\nfunction createInterpolationFromStringOutputRange(config) {\r\n  var outputRange = config.outputRange;\r\n  invariant(outputRange.length >= 2, 'Bad output range');\r\n  outputRange = outputRange.map(colorToRgba);\r\n  checkPattern(outputRange); // ['rgba(0, 100, 200, 0)', 'rgba(50, 150, 250, 0.5)']\r\n  // ->\r\n  // [\r\n  //   [0, 50],\r\n  //   [100, 150],\r\n  //   [200, 250],\r\n  //   [0, 0.5],\r\n  // ]\r\n\r\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need to\r\n   * guard against this possibility.\r\n   */\r\n\r\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);\r\n  outputRange.forEach(value => {\r\n    /* $FlowFixMe(>=0.18.0): `value.match()` can return `null`. Need to guard\r\n     * against this possibility.\r\n     */\r\n    value.match(stringShapeRegex).forEach((number, i) => {\r\n      outputRanges[i].push(+number);\r\n    });\r\n  });\r\n  var interpolations = outputRange[0].match(stringShapeRegex)\r\n  /* $FlowFixMe(>=0.18.0): `outputRange[0].match()` can return `null`. Need\r\n   * to guard against this possibility. */\r\n  .map((value, i) => {\r\n    return createInterpolation(_objectSpread(_objectSpread({}, config), {}, {\r\n      outputRange: outputRanges[i]\r\n    }));\r\n  }); // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\r\n  // round the opacity (4th column).\r\n\r\n  var shouldRound = isRgbOrRgba(outputRange[0]);\r\n  return input => {\r\n    var i = 0; // 'rgba(0, 100, 200, 0)'\r\n    // ->\r\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\r\n\r\n    return outputRange[0].replace(stringShapeRegex, () => {\r\n      var val = +interpolations[i++](input);\r\n\r\n      if (shouldRound) {\r\n        val = i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;\r\n      }\r\n\r\n      return String(val);\r\n    });\r\n  };\r\n}\r\n\r\nfunction isRgbOrRgba(range) {\r\n  return typeof range === 'string' && range.startsWith('rgb');\r\n}\r\n\r\nfunction checkPattern(arr) {\r\n  var pattern = arr[0].replace(stringShapeRegex, '');\r\n\r\n  for (var i = 1; i < arr.length; ++i) {\r\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\r\n  }\r\n}\r\n\r\nfunction findRange(input, inputRange) {\r\n  var i;\r\n\r\n  for (i = 1; i < inputRange.length - 1; ++i) {\r\n    if (inputRange[i] >= input) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return i - 1;\r\n}\r\n\r\nfunction checkValidInputRange(arr) {\r\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\r\n\r\n  for (var i = 1; i < arr.length; ++i) {\r\n    invariant(arr[i] >= arr[i - 1],\r\n    /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\r\n     * one or both of the operands may be something that doesn't cleanly\r\n     * convert to a string, like undefined, null, and object, etc. If you really\r\n     * mean this implicit string conversion, you can do something like\r\n     * String(myThing)\r\n     */\r\n    'inputRange must be monotonically non-decreasing ' + arr);\r\n  }\r\n}\r\n\r\nfunction checkInfiniteRange(name, arr) {\r\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\r\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\r\n  /* $FlowFixMe(>=0.13.0) - In the addition expression below this comment,\r\n   * one or both of the operands may be something that doesn't cleanly convert\r\n   * to a string, like undefined, null, and object, etc. If you really mean\r\n   * this implicit string conversion, you can do something like\r\n   * String(myThing)\r\n   */\r\n  name + 'cannot be ]-infinity;+infinity[ ' + arr);\r\n}\r\n\r\nclass AnimatedInterpolation extends AnimatedWithChildren {\r\n  // Export for testing.\r\n  constructor(parent, config) {\r\n    super();\r\n    this._parent = parent;\r\n    this._config = config;\r\n    this._interpolation = createInterpolation(config);\r\n  }\r\n\r\n  __makeNative() {\r\n    this._parent.__makeNative();\r\n\r\n    super.__makeNative();\r\n  }\r\n\r\n  __getValue() {\r\n    var parentValue = this._parent.__getValue();\r\n\r\n    invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');\r\n    return this._interpolation(parentValue);\r\n  }\r\n\r\n  interpolate(config) {\r\n    return new AnimatedInterpolation(this, config);\r\n  }\r\n\r\n  __attach() {\r\n    this._parent.__addChild(this);\r\n  }\r\n\r\n  __detach() {\r\n    this._parent.__removeChild(this);\r\n\r\n    super.__detach();\r\n  }\r\n\r\n  __transformDataType(range) {\r\n    return range.map(NativeAnimatedHelper.transformDataType);\r\n  }\r\n\r\n  __getNativeConfig() {\r\n    if (__DEV__) {\r\n      NativeAnimatedHelper.validateInterpolation(this._config);\r\n    }\r\n\r\n    return {\r\n      inputRange: this._config.inputRange,\r\n      // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\r\n\r\n      /* $FlowFixMe(>=0.38.0) - Flow error detected during the deployment of\r\n       * v0.38.0. To see the error, remove this comment and run flow */\r\n      outputRange: this.__transformDataType(this._config.outputRange),\r\n      extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',\r\n      extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',\r\n      type: 'interpolation'\r\n    };\r\n  }\r\n\r\n}\r\n\r\nAnimatedInterpolation.__createInterpolation = createInterpolation;\r\nexport default AnimatedInterpolation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}