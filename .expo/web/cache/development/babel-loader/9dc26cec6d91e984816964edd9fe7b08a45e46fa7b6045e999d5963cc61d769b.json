{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"disabled\", \"style\", \"titleRef\", \"titleStyle\", \"title\", \"titleMaxFontSizeMultiplier\", \"mode\", \"theme\", \"testID\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { modeTextVariant } from \"./utils\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport Text from \"../Typography/Text\";\nvar AppbarContent = function AppbarContent(_ref) {\n  var titleColor = _ref.color,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    onPress = _ref.onPress,\n    disabled = _ref.disabled,\n    style = _ref.style,\n    titleRef = _ref.titleRef,\n    titleStyle = _ref.titleStyle,\n    title = _ref.title,\n    titleMaxFontSizeMultiplier = _ref.titleMaxFontSizeMultiplier,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'appbar-content' : _ref$testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3,\n    colors = theme.colors;\n  var titleTextColor = titleColor ? titleColor : isV3 ? colors.onSurface : white;\n  var subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n  var modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer\n  };\n  var variant = modeTextVariant[mode];\n  var contentWrapperProps = _objectSpread({\n    pointerEvents: 'box-none',\n    style: [styles.container, isV3 && modeContainerStyles[mode], style],\n    testID: testID\n  }, rest);\n  var content = React.createElement(React.Fragment, null, typeof title === 'string' ? React.createElement(Text, _extends({}, isV3 && {\n    variant: variant\n  }, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleTextColor\n    }, isV3 ? theme.fonts[variant] : Platform.OS === 'ios' ? theme.fonts.regular : theme.fonts.medium), !isV3 && styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityRole: onPress ? 'none' : Platform.OS === 'web' ? 'heading' : 'header',\n    accessibilityTraits: \"header\",\n    testID: testID + \"-title-text\",\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }), title) : title, !isV3 && subtitle ? React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null);\n  if (onPress) {\n    return (React.createElement(Pressable, _extends({\n        accessibilityRole: touchableRole,\n        accessibilityTraits: touchableRole,\n        accessibilityComponentType: \"button\",\n        accessbilityState: disabled ? 'disabled' : null,\n        onPress: onPress,\n        disabled: disabled\n      }, contentWrapperProps), content)\n    );\n  }\n  return React.createElement(View, contentWrapperProps, content);\n};\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nvar touchableRole = 'button';\nexport default AppbarContent;\nexport { AppbarContent };","map":{"version":3,"names":["React","Platform","StyleSheet","Pressable","View","color","modeTextVariant","useInternalTheme","white","Text","AppbarContent","_ref","titleColor","subtitle","subtitleStyle","onPress","disabled","style","titleRef","titleStyle","title","titleMaxFontSizeMultiplier","_ref$mode","mode","themeOverrides","theme","_ref$testID","testID","rest","_objectWithoutProperties","_excluded","isV3","colors","titleTextColor","onSurface","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","contentWrapperProps","_objectSpread","pointerEvents","container","content","createElement","Fragment","_extends","ref","fonts","OS","regular","numberOfLines","accessible","accessibilityRole","accessibilityTraits","maxFontSizeMultiplier","touchableRole","accessibilityComponentType","accessbilityState","displayName","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize"],"sources":["C:\\Users\\Digitacion Nery\\Desktop\\TornilloFeliz\\APP_MOBILE_DESARROLLO\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  AccessibilityRole,\r\n  GestureResponderEvent,\r\n  Platform,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  Pressable,\r\n  View,\r\n  ViewStyle,\r\n  ViewProps,\r\n} from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport { modeTextVariant } from './utils';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport { white } from '../../styles/themes/v2/colors';\r\nimport type { $RemoveChildren, MD3TypescaleKey, ThemeProp } from '../../types';\r\nimport Text, { TextRef } from '../Typography/Text';\r\n\r\ntype TitleString = {\r\n  title: string;\r\n  titleStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\ntype TitleElement = { title: React.ReactNode; titleStyle?: never };\r\n\r\nexport type Props = $RemoveChildren<typeof View> & {\r\n  // For `title` and `titleStyle` props their types are duplicated due to the generation of documentation.\r\n  // Appropriate type for them are either `TitleString` or `TitleElement`, depends on `title` type.\r\n  /**\r\n   * Text or component for the title.\r\n   */\r\n  title: React.ReactNode;\r\n  /**\r\n   * Style for the title, if `title` is a string.\r\n   */\r\n  titleStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Reference for the title.\r\n   */\r\n  titleRef?: React.RefObject<TextRef>;\r\n  /**\r\n   * @deprecated Deprecated in v5.x\r\n   * Text for the subtitle.\r\n   */\r\n  subtitle?: React.ReactNode;\r\n  /**\r\n   * @deprecated Deprecated in v5.x\r\n   * Style for the subtitle.\r\n   */\r\n  subtitleStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * If true, disable all interactions for this component.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Custom color for the text.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Specifies the largest possible scale a title font can reach.\r\n   */\r\n  titleMaxFontSizeMultiplier?: number;\r\n  /**\r\n   * @internal\r\n   */\r\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * testID to be used on tests.\r\n   */\r\n  testID?: string;\r\n} & (TitleString | TitleElement);\r\n\r\n/**\r\n * A component used to display a title and optional subtitle in an appbar.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Appbar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *     <Appbar.Header>\r\n *        <Appbar.Content title=\"Title\" />\r\n *     </Appbar.Header>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst AppbarContent = ({\r\n  color: titleColor,\r\n  subtitle,\r\n  subtitleStyle,\r\n  onPress,\r\n  disabled,\r\n  style,\r\n  titleRef,\r\n  titleStyle,\r\n  title,\r\n  titleMaxFontSizeMultiplier,\r\n  mode = 'small',\r\n  theme: themeOverrides,\r\n  testID = 'appbar-content',\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { isV3, colors } = theme;\r\n\r\n  const titleTextColor = titleColor\r\n    ? titleColor\r\n    : isV3\r\n    ? colors.onSurface\r\n    : white;\r\n\r\n  const subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\r\n\r\n  const modeContainerStyles = {\r\n    small: styles.v3DefaultContainer,\r\n    medium: styles.v3MediumContainer,\r\n    large: styles.v3LargeContainer,\r\n    'center-aligned': styles.v3DefaultContainer,\r\n  };\r\n\r\n  const variant = modeTextVariant[mode] as MD3TypescaleKey;\r\n\r\n  const contentWrapperProps = {\r\n    pointerEvents: 'box-none' as ViewProps['pointerEvents'],\r\n    style: [styles.container, isV3 && modeContainerStyles[mode], style],\r\n    testID,\r\n    ...rest,\r\n  };\r\n\r\n  const content = (\r\n    <>\r\n      {typeof title === 'string' ? (\r\n        <Text\r\n          {...(isV3 && { variant })}\r\n          ref={titleRef}\r\n          style={[\r\n            {\r\n              color: titleTextColor,\r\n              ...(isV3\r\n                ? theme.fonts[variant]\r\n                : Platform.OS === 'ios'\r\n                ? theme.fonts.regular\r\n                : theme.fonts.medium),\r\n            },\r\n            !isV3 && styles.title,\r\n            titleStyle,\r\n          ]}\r\n          numberOfLines={1}\r\n          accessible\r\n          accessibilityRole={\r\n            onPress\r\n              ? 'none'\r\n              : Platform.OS === 'web'\r\n              ? ('heading' as 'header')\r\n              : 'header'\r\n          }\r\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\r\n          accessibilityTraits=\"header\"\r\n          testID={`${testID}-title-text`}\r\n          maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\r\n        >\r\n          {title}\r\n        </Text>\r\n      ) : (\r\n        title\r\n      )}\r\n      {!isV3 && subtitle ? (\r\n        <Text\r\n          style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\r\n          numberOfLines={1}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      ) : null}\r\n    </>\r\n  );\r\n\r\n  if (onPress) {\r\n    return (\r\n      // eslint-disable-next-line react-native-a11y/has-accessibility-props\r\n      <Pressable\r\n        accessibilityRole={touchableRole}\r\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\r\n        accessibilityTraits={touchableRole}\r\n        accessibilityComponentType=\"button\"\r\n        accessbilityState={disabled ? 'disabled' : null}\r\n        onPress={onPress}\r\n        disabled={disabled}\r\n        {...contentWrapperProps}\r\n      >\r\n        {content}\r\n      </Pressable>\r\n    );\r\n  }\r\n\r\n  return <View {...contentWrapperProps}>{content}</View>;\r\n};\r\n\r\nAppbarContent.displayName = 'Appbar.Content';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 12,\r\n  },\r\n  v3DefaultContainer: {\r\n    paddingHorizontal: 0,\r\n  },\r\n  v3MediumContainer: {\r\n    paddingHorizontal: 0,\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 24,\r\n  },\r\n  v3LargeContainer: {\r\n    paddingHorizontal: 0,\r\n    paddingTop: 36,\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 28,\r\n  },\r\n  title: {\r\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\r\n  },\r\n});\r\n\r\nconst touchableRole: AccessibilityRole = 'button';\r\n\r\nexport default AppbarContent;\r\n\r\n// @component-docs ignore-next-line\r\nexport { AppbarContent };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}