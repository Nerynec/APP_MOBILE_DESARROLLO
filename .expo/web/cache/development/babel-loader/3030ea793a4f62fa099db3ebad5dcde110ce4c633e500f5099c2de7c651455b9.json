{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"size\", \"style\", \"labelStyle\", \"color\", \"theme\", \"maxFontSizeMultiplier\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport getContrastingColor from \"../../utils/getContrastingColor\";\nimport Text from \"../Typography/Text\";\nvar defaultSize = 64;\nvar AvatarText = function AvatarText(_ref) {\n  var label = _ref.label,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    labelStyle = _ref.labelStyle,\n    customColor = _ref.color,\n    themeOverrides = _ref.theme,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _theme$colors;\n  var theme = useInternalTheme(themeOverrides);\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary : _ref2$backgroundColor,\n    restStyle = _objectWithoutProperties(_ref2, _excluded2);\n  var textColor = customColor != null ? customColor : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  var _useWindowDimensions = useWindowDimensions(),\n    fontScale = _useWindowDimensions.fontScale;\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(Text, {\n    style: [styles.text, {\n      color: textColor,\n      fontSize: size / 2,\n      lineHeight: size / fontScale\n    }, labelStyle],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label));\n};\nAvatarText.displayName = 'Avatar.Text';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nexport default AvatarText;","map":{"version":3,"names":["React","StyleSheet","useWindowDimensions","View","useInternalTheme","white","getContrastingColor","Text","defaultSize","AvatarText","_ref","label","_ref$size","size","style","labelStyle","customColor","color","themeOverrides","theme","maxFontSizeMultiplier","rest","_objectWithoutProperties","_excluded","_theme$colors","_ref2","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","_excluded2","textColor","_useWindowDimensions","fontScale","createElement","_extends","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"sources":["C:\\Users\\Digitacion Nery\\Desktop\\TornilloFeliz\\APP_MOBILE_DESARROLLO\\node_modules\\react-native-paper\\src\\components\\Avatar\\AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  useWindowDimensions,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport { white } from '../../styles/themes/v2/colors';\r\nimport type { ThemeProp } from '../../types';\r\nimport getContrastingColor from '../../utils/getContrastingColor';\r\nimport Text from '../Typography/Text';\r\n\r\nconst defaultSize = 64;\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\r\n  /**\r\n   * Initials to show as the text in the `Avatar`.\r\n   */\r\n  label: string;\r\n  /**\r\n   * Size of the avatar.\r\n   */\r\n  size?: number;\r\n  /**\r\n   * Custom color for the text.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Style for text container\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * Style for the title.\r\n   */\r\n  labelStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Specifies the largest possible scale a text font can reach.\r\n   */\r\n  maxFontSizeMultiplier?: number;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n};\r\n\r\n/**\r\n * Avatars can be used to represent people in a graphical way.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Avatar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <Avatar.Text size={24} label=\"XD\" />\r\n * );\r\n * ```\r\n */\r\nconst AvatarText = ({\r\n  label,\r\n  size = defaultSize,\r\n  style,\r\n  labelStyle,\r\n  color: customColor,\r\n  theme: themeOverrides,\r\n  maxFontSizeMultiplier,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\r\n    StyleSheet.flatten(style) || {};\r\n  const textColor =\r\n    customColor ??\r\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\r\n  const { fontScale } = useWindowDimensions();\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        {\r\n          width: size,\r\n          height: size,\r\n          borderRadius: size / 2,\r\n          backgroundColor,\r\n        },\r\n        styles.container,\r\n        restStyle,\r\n      ]}\r\n      {...rest}\r\n    >\r\n      <Text\r\n        style={[\r\n          styles.text,\r\n          {\r\n            color: textColor,\r\n            fontSize: size / 2,\r\n            lineHeight: size / fontScale,\r\n          },\r\n          labelStyle,\r\n        ]}\r\n        numberOfLines={1}\r\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\r\n      >\r\n        {label}\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nAvatarText.displayName = 'Avatar.Text';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    textAlignVertical: 'center',\r\n  },\r\n});\r\n\r\nexport default AvatarText;\r\n"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,mBAAA;AAAA,OAAAC,IAAA;AAU9B,SAASC,gBAAgB;AACzB,SAASC,KAAK;AAEd,OAAOC,mBAAmB;AAC1B,OAAOC,IAAI;AAEX,IAAMC,WAAW,GAAG,EAAE;AA8CtB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EASH;EAAA,IARXC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAAC,SAAA,GAAAF,IAAA,CACLG,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAGJ,WAAW,GAAAI,SAAA;IAClBE,KAAK,GAAAJ,IAAA,CAALI,KAAK;IACLC,UAAU,GAAAL,IAAA,CAAVK,UAAU;IACHC,WAAW,GAAAN,IAAA,CAAlBO,KAAK;IACEC,cAAc,GAAAR,IAAA,CAArBS,KAAK;IACLC,qBAAqB,GAAAV,IAAA,CAArBU,qBAAqB;IAClBC,IAAA,GAAAC,wBAAA,CAAAZ,IAAA,EAAAa,SAAA;EACQ,IAAAC,aAAA;EACX,IAAML,KAAK,GAAGf,gBAAgB,CAACc,cAAc,CAAC;EAC9C,IAAAO,KAAA,GACExB,UAAU,CAACyB,OAAO,CAACZ,KAAK,CAAC,IAAI,CAAC,CAAC;IAAAa,qBAAA,GAAAF,KAAA,CADzBG,eAAe;IAAfA,eAAe,GAAAD,qBAAA,eAAAH,aAAA,GAAGL,KAAK,CAACU,MAAM,cAAAL,aAAA,uBAAZA,aAAA,CAAcM,OAAO,GAAAH,qBAAA;IAAKI,SAAA,GAAAT,wBAAA,CAAAG,KAAA,EAAAO,UAAA;EAEpD,IAAMC,SAAS,GACbjB,WAAW,WAAXA,WAAW,GACXV,mBAAmB,CAACsB,eAAe,EAAEvB,KAAK,EAAE,oBAAoB,CAAC;EACnE,IAAA6B,oBAAA,GAAsBhC,mBAAmB,CAAC,CAAC;IAAnCiC,SAAA,GAAAD,oBAAA,CAAAC,SAAA;EAER,OACEnC,KAAA,CAAAoC,aAAA,CAACjC,IAAI,EAAAkC,QAAA;IACHvB,KAAK,EAAE,CACL;MACEwB,KAAK,EAAEzB,IAAI;MACX0B,MAAM,EAAE1B,IAAI;MACZ2B,YAAY,EAAE3B,IAAI,GAAG,CAAC;MACtBe,eAAA,EAAAA;IACF,CAAC,EACDa,MAAM,CAACC,SAAS,EAChBX,SAAS;EACT,GACEV,IAAI,GAERrB,KAAA,CAAAoC,aAAA,CAAC7B,IAAI;IACHO,KAAK,EAAE,CACL2B,MAAM,CAACE,IAAI,EACX;MACE1B,KAAK,EAAEgB,SAAS;MAChBW,QAAQ,EAAE/B,IAAI,GAAG,CAAC;MAClBgC,UAAU,EAAEhC,IAAI,GAAGsB;IACrB,CAAC,EACDpB,UAAU,CACV;IACF+B,aAAa,EAAE,CAAE;IACjB1B,qBAAqB,EAAEA;EAAsB,GAE5CT,KACG,CACF,CAAC;AAEX,CAAC;AAEDF,UAAU,CAACsC,WAAW,GAAG,aAAa;AAEtC,IAAMN,MAAM,GAAGxC,UAAU,CAAC+C,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,IAAI,EAAE;IACJQ,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAe3C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}