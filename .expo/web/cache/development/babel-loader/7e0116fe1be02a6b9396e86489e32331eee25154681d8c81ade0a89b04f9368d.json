{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar overflowLeft = function overflowLeft(center) {\n  return center < 0;\n};\nvar overflowRight = function overflowRight(center, tooltipWidth) {\n  var _Dimensions$get = Dimensions.get('window'),\n    layoutWidth = _Dimensions$get.width;\n  return center + tooltipWidth > layoutWidth;\n};\nvar overflowBottom = function overflowBottom(childrenY, childrenHeight, tooltipHeight) {\n  var _Dimensions$get2 = Dimensions.get('window'),\n    layoutHeight = _Dimensions$get2.height;\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\n};\nvar getTooltipXPosition = function getTooltipXPosition(_ref, _ref2) {\n  var childrenX = _ref.pageX,\n    childrenWidth = _ref.width;\n  var tooltipWidth = _ref2.width;\n  var center = childrenWidth > 0 ? childrenX + (childrenWidth - tooltipWidth) / 2 : childrenX;\n  if (overflowLeft(center)) return childrenX;\n  if (overflowRight(center, tooltipWidth)) return childrenX + childrenWidth - tooltipWidth;\n  return center;\n};\nvar getTooltipYPosition = function getTooltipYPosition(_ref3, _ref4) {\n  var childrenY = _ref3.pageY,\n    childrenHeight = _ref3.height;\n  var tooltipHeight = _ref4.height;\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight)) return childrenY - tooltipHeight;\n  return childrenY + childrenHeight;\n};\nvar getChildrenMeasures = function getChildrenMeasures(style, measures) {\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n    position = _StyleSheet$flatten.position,\n    top = _StyleSheet$flatten.top,\n    bottom = _StyleSheet$flatten.bottom,\n    left = _StyleSheet$flatten.left,\n    right = _StyleSheet$flatten.right;\n  if (position === 'absolute') {\n    var pageX = 0;\n    var pageY = measures.pageY;\n    var height = 0;\n    var width = 0;\n    if (typeof left === 'number') {\n      pageX = left;\n      width = 0;\n    }\n    if (typeof right === 'number') {\n      pageX = measures.width - right;\n      width = 0;\n    }\n    if (typeof top === 'number') {\n      pageY = pageY + top;\n    }\n    if (typeof bottom === 'number') {\n      pageY = pageY - bottom;\n    }\n    return {\n      pageX: pageX,\n      pageY: pageY,\n      width: width,\n      height: height\n    };\n  }\n  return measures;\n};\nexport var getTooltipPosition = function getTooltipPosition(_ref5, component) {\n  var children = _ref5.children,\n    tooltip = _ref5.tooltip,\n    measured = _ref5.measured;\n  if (!measured) return {};\n  var measures = children;\n  if (component.props.style) {\n    measures = getChildrenMeasures(component.props.style, children);\n  }\n  return {\n    left: getTooltipXPosition(measures, tooltip),\n    top: getTooltipYPosition(measures, tooltip)\n  };\n};","map":{"version":3,"names":["overflowLeft","center","overflowRight","tooltipWidth","_Dimensions$get","Dimensions","get","layoutWidth","width","overflowBottom","childrenY","childrenHeight","tooltipHeight","_Dimensions$get2","layoutHeight","height","getTooltipXPosition","_ref","_ref2","childrenX","pageX","childrenWidth","getTooltipYPosition","_ref3","_ref4","pageY","getChildrenMeasures","style","measures","_StyleSheet$flatten","StyleSheet","flatten","position","top","bottom","left","right","getTooltipPosition","_ref5","component","children","tooltip","measured","props"],"sources":["C:\\Users\\Digitacion Nery\\Desktop\\TornilloFeliz\\APP_MOBILE_DESARROLLO\\node_modules\\react-native-paper\\src\\components\\Tooltip\\utils.ts"],"sourcesContent":["import {\r\n  Dimensions,\r\n  LayoutRectangle,\r\n  StyleProp,\r\n  ViewStyle,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\ntype ChildrenMeasurement = {\r\n  width: number;\r\n  height: number;\r\n  pageX: number;\r\n  pageY: number;\r\n};\r\n\r\ntype TooltipLayout = LayoutRectangle;\r\n\r\nexport type Measurement = {\r\n  children: ChildrenMeasurement;\r\n  tooltip: TooltipLayout;\r\n  measured: boolean;\r\n};\r\n\r\nexport type TooltipChildProps = {\r\n  style: StyleProp<ViewStyle>;\r\n  disabled?: boolean;\r\n  onPress?: () => void;\r\n  onHoverIn?: () => void;\r\n  onHoverOut?: () => void;\r\n};\r\n\r\n/**\r\n * Return true when the tooltip center x-coordinate relative to the wrapped element is negative.\r\n * The tooltip will be placed at the starting x-coordinate from the wrapped element.\r\n */\r\nconst overflowLeft = (center: number): boolean => {\r\n  return center < 0;\r\n};\r\n\r\n/**\r\n * Return true when the tooltip center x-coordinate + tooltip width is greater than the layout width\r\n * The tooltip width will grow from right to left relative to the wrapped element.\r\n */\r\nconst overflowRight = (center: number, tooltipWidth: number): boolean => {\r\n  const { width: layoutWidth } = Dimensions.get('window');\r\n\r\n  return center + tooltipWidth > layoutWidth;\r\n};\r\n\r\n/**\r\n * Return true when the children y-coordinate + its height + tooltip height is greater than the layout height.\r\n * The tooltip will be placed at the top of the wrapped element.\r\n */\r\nconst overflowBottom = (\r\n  childrenY: number,\r\n  childrenHeight: number,\r\n  tooltipHeight: number\r\n): boolean => {\r\n  const { height: layoutHeight } = Dimensions.get('window');\r\n\r\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\r\n};\r\n\r\nconst getTooltipXPosition = (\r\n  { pageX: childrenX, width: childrenWidth }: ChildrenMeasurement,\r\n  { width: tooltipWidth }: TooltipLayout\r\n): number => {\r\n  // when the children use position absolute the childrenWidth is measured as 0,\r\n  // so it's best to anchor the tooltip at the start of the children\r\n  const center =\r\n    childrenWidth > 0\r\n      ? childrenX + (childrenWidth - tooltipWidth) / 2\r\n      : childrenX;\r\n\r\n  if (overflowLeft(center)) return childrenX;\r\n\r\n  if (overflowRight(center, tooltipWidth))\r\n    return childrenX + childrenWidth - tooltipWidth;\r\n\r\n  return center;\r\n};\r\n\r\nconst getTooltipYPosition = (\r\n  { pageY: childrenY, height: childrenHeight }: ChildrenMeasurement,\r\n  { height: tooltipHeight }: TooltipLayout\r\n): number => {\r\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight))\r\n    return childrenY - tooltipHeight;\r\n\r\n  return childrenY + childrenHeight;\r\n};\r\n\r\nconst getChildrenMeasures = (\r\n  style: StyleProp<ViewStyle>,\r\n  measures: ChildrenMeasurement\r\n): ChildrenMeasurement => {\r\n  const { position, top, bottom, left, right } = StyleSheet.flatten(style);\r\n\r\n  if (position === 'absolute') {\r\n    let pageX = 0;\r\n    let pageY = measures.pageY;\r\n    let height = 0;\r\n    let width = 0;\r\n    if (typeof left === 'number') {\r\n      pageX = left;\r\n      width = 0;\r\n    }\r\n    if (typeof right === 'number') {\r\n      pageX = measures.width - right;\r\n      width = 0;\r\n    }\r\n    if (typeof top === 'number') {\r\n      pageY = pageY + top;\r\n    }\r\n    if (typeof bottom === 'number') {\r\n      pageY = pageY - bottom;\r\n    }\r\n\r\n    return { pageX, pageY, width, height };\r\n  }\r\n\r\n  return measures;\r\n};\r\n\r\nexport const getTooltipPosition = (\r\n  { children, tooltip, measured }: Measurement,\r\n  component: React.ReactElement<{\r\n    style: StyleProp<ViewStyle>;\r\n  }>\r\n): {} | { left: number; top: number } => {\r\n  if (!measured) return {};\r\n  let measures = children;\r\n  if (component.props.style) {\r\n    measures = getChildrenMeasures(component.props.style, children);\r\n  }\r\n\r\n  return {\r\n    left: getTooltipXPosition(measures, tooltip),\r\n    top: getTooltipYPosition(measures, tooltip),\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}